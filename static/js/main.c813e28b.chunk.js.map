{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","addMovie","useState","searchQuery","setSearchQuery","currentMovie","setCurrentMovie","isLoading","setIsLoading","error","setError","htmlFor","type","id","placeholder","value","onChange","e","target","cn","onClick","event","query","preventDefault","fetch","then","res","json","catch","Response","Error","r","imdbID","Title","Poster","Plot","finally","disabled","inMoviesArray","filter","length","App","setMovies","prev","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c813e28b.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport cn from 'classnames';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\nimport { MovieData } from '../../types/MovieData';\n\nconst ifNoPicture = 'https://via.placeholder.com/360x270.png?text=no%20preview';\n\ntype Props = {\n  addMovie: (currentMovie: Movie) => void\n  movies: Movie[],\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie, movies }) => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [currentMovie, setCurrentMovie] = useState<Movie | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const handleSubmit = (\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n  ) => {\n    event.preventDefault();\n    setIsLoading(true);\n\n    getMovie(searchQuery)\n      .then(r => {\n        if ('Error' in r) {\n          throw new Error('error');\n        }\n\n        const {\n          imdbID,\n          Title,\n          Poster,\n          Plot,\n        } = r as MovieData;\n\n        const poster = Poster !== 'N/A'\n          ? Poster\n          : ifNoPicture;\n\n        setCurrentMovie({\n          title: Title,\n          description: Plot,\n          imgUrl: poster,\n          imdbUrl: `https://www.imdb.com/title/${imdbID}`,\n          imdbId: imdbID,\n        });\n      })\n      .catch(() => (\n        setError(true)\n      ))\n      .finally(() => (\n        setIsLoading(false)\n      ));\n  };\n\n  const handleAddMovie = () => {\n    const inMoviesArray = movies\n      .filter(movie => movie.title === currentMovie?.title).length === 1;\n\n    if (currentMovie !== null && !inMoviesArray) {\n      addMovie(currentMovie);\n    }\n\n    setCurrentMovie(null);\n    setSearchQuery('');\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={searchQuery}\n              onChange={e => {\n                setSearchQuery(e.target.value);\n                setError(false);\n              }}\n            />\n          </div>\n\n          {error && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={cn(\n                'button is-light',\n                { 'is-loading': isLoading },\n              )}\n              onClick={handleSubmit}\n              disabled={!searchQuery}\n            >\n              {!currentMovie ? 'Find a movie' : 'Search again'}\n            </button>\n          </div>\n\n          {currentMovie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAddMovie}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {currentMovie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={currentMovie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=34815107';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const handleAddMovie = (currentMovie: Movie) => {\n    setMovies(prev => [...prev, currentMovie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie addMovie={handleAddMovie} movies={movies} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}